<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <Filter Include="Source Files">
      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>
      <Extensions>cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx</Extensions>
    </Filter>
    <Filter Include="Source Files\01 Accustoming to c++">
      <UniqueIdentifier>{9ba925fb-e5e2-4e00-8f62-9f20415a8f94}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\02 Constructors, Destructors and Assignment Operators">
      <UniqueIdentifier>{ba3e1366-e780-4b47-bb6b-9e3e419a5e71}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\03 Resource Management">
      <UniqueIdentifier>{1c8631f1-b8e5-4142-a674-08c5a3e0e108}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\04 Designs and Declarations">
      <UniqueIdentifier>{b27a865b-4a20-48ad-8275-d3600f88bde4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\05 Implementations">
      <UniqueIdentifier>{f3299424-343d-4c1f-8710-47ba6a89cee9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\06 Inheritance and Object-Oriented Design">
      <UniqueIdentifier>{d0d40ea4-602d-48cd-8bd0-cb7f1832acfd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\07 Templates and Generic Programming">
      <UniqueIdentifier>{0a82ee78-6d1e-4255-9f1e-65c08337d2cf}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\08 Customizing new and delete">
      <UniqueIdentifier>{3d44192f-1486-4c9e-bf15-812de66d6898}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\09 Miscellany">
      <UniqueIdentifier>{e1123360-8b4e-4f5a-9d07-7fa469ca2958}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\00 Introduction">
      <UniqueIdentifier>{47334b72-9a9a-449f-beb7-477a8f8948a2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\05 Implementations\Item 31 Minimize compilation dependency">
      <UniqueIdentifier>{9c47ac75-121d-493e-820b-774406aa1047}</UniqueIdentifier>
    </Filter>
    <Filter Include="Source Files\05 Implementations\Item 31 Minimize compilation dependency\PIMPL">
      <UniqueIdentifier>{f642097c-8a06-43b9-ad26-9a04519da7f2}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="Main.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="Item 01 cpp as federation.cpp">
      <Filter>Source Files\01 Accustoming to c++</Filter>
    </ClCompile>
    <ClCompile Include="Item 02 Prefer const to defines.cpp">
      <Filter>Source Files\01 Accustoming to c++</Filter>
    </ClCompile>
    <ClCompile Include="Item 03 Use const when possible.cpp">
      <Filter>Source Files\01 Accustoming to c++</Filter>
    </ClCompile>
    <ClCompile Include="Item 04 Objects initlalized before use.cpp">
      <Filter>Source Files\01 Accustoming to c++</Filter>
    </ClCompile>
    <ClCompile Include="Item 05 Compiler generated functions.cpp">
      <Filter>Source Files\02 Constructors, Destructors and Assignment Operators</Filter>
    </ClCompile>
    <ClCompile Include="Item 06 Disallow auto gen functions not used.cpp">
      <Filter>Source Files\02 Constructors, Destructors and Assignment Operators</Filter>
    </ClCompile>
    <ClCompile Include="Item 07 Virtual destructors in base.cpp">
      <Filter>Source Files\02 Constructors, Destructors and Assignment Operators</Filter>
    </ClCompile>
    <ClCompile Include="Item 08 Ensure exceptions dont leave destructors.cpp">
      <Filter>Source Files\02 Constructors, Destructors and Assignment Operators</Filter>
    </ClCompile>
    <ClCompile Include="Item 09 Don%27t call virtual functions form ctor or dtor.cpp">
      <Filter>Source Files\02 Constructors, Destructors and Assignment Operators</Filter>
    </ClCompile>
    <ClCompile Include="Item 10 Assignment operator return ref to star this.cpp">
      <Filter>Source Files\02 Constructors, Destructors and Assignment Operators</Filter>
    </ClCompile>
    <ClCompile Include="Item 11 Handle assingment to self.cpp">
      <Filter>Source Files\02 Constructors, Destructors and Assignment Operators</Filter>
    </ClCompile>
    <ClCompile Include="Item 12 Copy all parts of object.cpp">
      <Filter>Source Files\02 Constructors, Destructors and Assignment Operators</Filter>
    </ClCompile>
    <ClCompile Include="Intro.cpp">
      <Filter>Source Files\00 Introduction</Filter>
    </ClCompile>
    <ClCompile Include="Item 13 Use objects to manage resources.cpp">
      <Filter>Source Files\03 Resource Management</Filter>
    </ClCompile>
    <ClCompile Include="Item 14 Copying behavior in resource-managing classes.cpp">
      <Filter>Source Files\03 Resource Management</Filter>
    </ClCompile>
    <ClCompile Include="Item 15 Prodive access to raw resource res manage class.cpp">
      <Filter>Source Files\03 Resource Management</Filter>
    </ClCompile>
    <ClCompile Include="Item 17 New objects in smart pointers own statement.cpp">
      <Filter>Source Files\03 Resource Management</Filter>
    </ClCompile>
    <ClCompile Include="Item 16 Use same new and delete forms.cpp">
      <Filter>Source Files\03 Resource Management</Filter>
    </ClCompile>
    <ClCompile Include="Item 18 Make interfaces hard to use incorrectly.cpp">
      <Filter>Source Files\04 Designs and Declarations</Filter>
    </ClCompile>
    <ClCompile Include="Item 19 Treat class design as type design.cpp">
      <Filter>Source Files\04 Designs and Declarations</Filter>
    </ClCompile>
    <ClCompile Include="Item 20 Pass by ref to const.cpp">
      <Filter>Source Files\04 Designs and Declarations</Filter>
    </ClCompile>
    <ClCompile Include="Item 21 Dont return reference when you must return an object.cpp">
      <Filter>Source Files\04 Designs and Declarations</Filter>
    </ClCompile>
    <ClCompile Include="Item 22 Declare data members private.cpp">
      <Filter>Source Files\04 Designs and Declarations</Filter>
    </ClCompile>
    <ClCompile Include="Item 23 Prefer non member non friend functions.cpp">
      <Filter>Source Files\04 Designs and Declarations</Filter>
    </ClCompile>
    <ClCompile Include="Item 24 Non member functions for type conversions on all params.cpp">
      <Filter>Source Files\04 Designs and Declarations</Filter>
    </ClCompile>
    <ClCompile Include="Item 25 Consider a non throwing swap.cpp">
      <Filter>Source Files\04 Designs and Declarations</Filter>
    </ClCompile>
    <ClCompile Include="Item 26 Postpone variable declarations as long as possible.cpp">
      <Filter>Source Files\05 Implementations</Filter>
    </ClCompile>
    <ClCompile Include="Item 27 Minimize casting.cpp">
      <Filter>Source Files\05 Implementations</Filter>
    </ClCompile>
    <ClCompile Include="Item 28 Avoid returning handles to object internals.cpp">
      <Filter>Source Files\05 Implementations</Filter>
    </ClCompile>
    <ClCompile Include="Item 29 Strive for exception safe code.cpp">
      <Filter>Source Files\05 Implementations</Filter>
    </ClCompile>
    <ClCompile Include="Item 30 Understand Inlining.cpp">
      <Filter>Source Files\05 Implementations</Filter>
    </ClCompile>
    <ClCompile Include="Item 31 Minimize compilcation dependencies between files.cpp">
      <Filter>Source Files\05 Implementations\Item 31 Minimize compilation dependency</Filter>
    </ClCompile>
    <ClCompile Include="Item 31 Person.cpp">
      <Filter>Source Files\05 Implementations\Item 31 Minimize compilation dependency\PIMPL</Filter>
    </ClCompile>
    <ClCompile Include="Item_31_PersonImpl.cpp">
      <Filter>Source Files\05 Implementations\Item 31 Minimize compilation dependency\PIMPL</Filter>
    </ClCompile>
    <ClCompile Include="Item 32 Make sure public inheritance is-a.cpp">
      <Filter>Source Files\06 Inheritance and Object-Oriented Design</Filter>
    </ClCompile>
    <ClCompile Include="Item 33 Avoid hiding inherited names.cpp">
      <Filter>Source Files\06 Inheritance and Object-Oriented Design</Filter>
    </ClCompile>
    <ClCompile Include="Item 35 Consider alternatives of virtual functions.cpp">
      <Filter>Source Files\06 Inheritance and Object-Oriented Design</Filter>
    </ClCompile>
    <ClCompile Include="Item 36 Never redefine non-virtual functions.cpp">
      <Filter>Source Files\06 Inheritance and Object-Oriented Design</Filter>
    </ClCompile>
    <ClCompile Include="Item 37 Never redefine inherited default parameter.cpp">
      <Filter>Source Files\06 Inheritance and Object-Oriented Design</Filter>
    </ClCompile>
    <ClCompile Include="Item 38 Composition for has-a or implemented by.cpp">
      <Filter>Source Files\06 Inheritance and Object-Oriented Design</Filter>
    </ClCompile>
    <ClCompile Include="Item 39 Use private inheritance carefully.cpp">
      <Filter>Source Files\06 Inheritance and Object-Oriented Design</Filter>
    </ClCompile>
    <ClCompile Include="Item 40 Use multiple inheritance carefully.cpp">
      <Filter>Source Files\06 Inheritance and Object-Oriented Design</Filter>
    </ClCompile>
    <ClCompile Include="Item 34 Differentiate inheritance interface vs implementation.cpp">
      <Filter>Source Files\06 Inheritance and Object-Oriented Design</Filter>
    </ClCompile>
    <ClCompile Include="Item 41 Implicit interfaces and compile-time polymorphisim.cpp">
      <Filter>Source Files\07 Templates and Generic Programming</Filter>
    </ClCompile>
    <ClCompile Include="Item 42 The two meanings of typename.cpp">
      <Filter>Source Files\07 Templates and Generic Programming</Filter>
    </ClCompile>
    <ClCompile Include="Item 43 How to access names in templatized base classes.cpp">
      <Filter>Source Files\07 Templates and Generic Programming</Filter>
    </ClCompile>
    <ClCompile Include="Item 44 Factor parameter-independent code out of templates.cpp">
      <Filter>Source Files\07 Templates and Generic Programming</Filter>
    </ClCompile>
    <ClCompile Include="Item 45 When to use member function templates.cpp">
      <Filter>Source Files\07 Templates and Generic Programming</Filter>
    </ClCompile>
    <ClCompile Include="Item 46 Non-Member function inside templates for type conversions.cpp">
      <Filter>Source Files\07 Templates and Generic Programming</Filter>
    </ClCompile>
    <ClCompile Include="Item 47 Traits classes for information on types.cpp">
      <Filter>Source Files\07 Templates and Generic Programming</Filter>
    </ClCompile>
    <ClCompile Include="Item 48 Template Metaprogramming.cpp">
      <Filter>Source Files\07 Templates and Generic Programming</Filter>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="Item 31 Person.hpp">
      <Filter>Source Files\05 Implementations\Item 31 Minimize compilation dependency\PIMPL</Filter>
    </ClInclude>
    <ClInclude Include="Item_31_PersonImpl.h">
      <Filter>Source Files\05 Implementations\Item 31 Minimize compilation dependency\PIMPL</Filter>
    </ClInclude>
  </ItemGroup>
</Project>